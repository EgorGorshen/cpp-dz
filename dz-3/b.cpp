/* Copyright 2025 EgorGorshen */

// B. Сапер ПИ С++
// Ограничение времени      1 секунда
// Ограничение памяти       64 Мб
// Ввод                     стандартный ввод или input.txt
// Вывод                    стандартный вывод или output.txt
// Вам необходимо построить поле для игры "Сапер" по его конфигурации – размерам
// и координатам расставленных на нем мин.
//
// Вкратце напомним правила построения поля для игры "Сапер":
//
//     Поле состоит из клеток с минами и пустых клеток
//
//     Клетки с миной обозначаются символом *
//
//     Пустые клетки содержат число ki,jki,j​ от 0 до 8
//     – количество мин на соседних клетках. Соседними клетками являются восемь
//     клеток, имеющих смежный угол или сторону.
//
// Формат ввода
//
// В первой строке содержатся три числа: MM от 1 до 100 - количество строк на
// поле, NN от 1 до 100 - количество столбцов на поле, KK от 0 до MNMN -
// количество мин на поле. В следующих KK строках содержатся по два числа с
// координатами мин: pp от 1 до MM - номер строки мины, qq от 1 до NN - номер
// столбца мины. Формат вывода
//
// Выведите построенное поле, разделяя строки поля переводом строки, а столбцы -
// пробелом. Пример Ввод Вывод
//
// 3 2 2
// 1 1
// 2 2
//
//
//
// * 2
// 2 *
// 1 1
#include <iostream>

int main(int argc, char *argv[]) {
  int w, n, m;
  std::cin >> n >> m;
  std::cin >> w;
  short **mat = new short *[n + 2];
  for (int i = 0; i < n + 2; i++) {
    mat[i] = new short[m];

    for (int j = 0; j < m + 2; ++j)
      mat[i][j] = 0;
  }

  int u, v;
  for (int i = 0; i < w; ++i) {
    std::cin >> u >> v;
    mat[u][v] = -1;
  }

  for (int i = 1; i < n + 1; ++i) {
    for (int j = 1; j < m + 1; ++j) {
      if (mat[i][j] == -1)
        continue;
      mat[i][j] += (mat[i - 1][j - 1] == -1) + (mat[i - 1][j] == -1) +
                   (mat[i - 1][j + 1] == -1) + (mat[i][j - 1] == -1) +
                   (mat[i][j + 1] == -1) + (mat[i + 1][j - 1] == -1) +
                   (mat[i + 1][j] == -1) + (mat[i + 1][j + 1] == -1);
    }
  }

  for (int i = 1; i < n + 1; ++i) {
    for (int j = 1; j < m + 1; ++j) {
      if (mat[i][j] == -1)
        std::cout << "*";
      else
        std::cout << mat[i][j];

      if (j != m)
        std::cout << ' ';
    }
    std::cout << std::endl;
  }

  return 0;
}
